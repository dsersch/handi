<div class="col-lg-3">
<div class="page-header">
        <h1><%= user.userName %></h1>
    
        <a href="/logout" class="btn btn-primary btn-sm">Logout</a>
        <a href="/edit" class="btn btn-primary btn-sm">Edit</a>
    
    </div>
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            <div class="well">
                <p>
                    <strong>Name</strong>: <br>
                    <%= user.userName %><br>
                    <strong>email</strong>: <br>
                    <%= user.email %><br>
                </p>    
            </div>
        </div>
    </div>
</div>

<form id="youtube-search" class="form-inline my-2 my-lg-0">
    <input class="form-control mr-sm-2" id="search-value" type="text" placeholder="Search" aria-label="Search">
    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
</form>

<div id="player"></div>

<script>
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement('script');

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var player;
function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
    height: '200',
    width: '420',
    videoId: 'M7lc1UVf-VE',
    events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
    }
    });
}

// 4. The API will call this function when the video player is ready.
function onPlayerReady(event) {
    event.target.playVideo();
}

// 5. The API calls this function when the player's state changes.
//    The function indicates that when playing a video (state=1),
//    the player should play for six seconds and then stop.
var done = false;
function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.PLAYING && !done) {
    setTimeout(stopVideo, 6000);
    done = true;
    }
}
function stopVideo() {
    player.stopVideo();
}
</script>

<script>
var $searchBar = $("#youtube-search")
$searchBar.on('submit', (evt) => {
    evt.preventDefault()
    var term = $("#search-value").val()
    var searchURL = '/search?term=' + term
    $.ajax({url: searchURL, method: 'get'}).done(function(res){
        console.log(res[0].id)
    })
})
</script>